// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  ulid      String   @unique @default(uuid())
  name      String
  email     String
  username  String   @unique
  password  String
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int      @map("role_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Role {
  id          Int          @id @default(autoincrement())
  description String
  code        String       @unique
  permissions Permission[] @relation("RolePermissions")
  users       User[]
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")

  @@map("roles")
}

model Permission {
  id        Int      @id @default(autoincrement())
  ulid      String   @unique @default(uuid())
  name      String   @unique
  code      String   @unique
  roles     Role[]   @relation("RolePermissions")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("permissions")
}

model Asset {
  id        Int      @id @default(autoincrement())
  ulid      String   @unique @default(uuid())
  assetId   String   @map("asset_id")
  ceCd      String   @map("ce_cd")
  partCd    String   @map("part_cd")
  tagCd     String   @unique @map("tag_cd")
  type      String
  comment   String?
  value     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  spCondition              SpCondition[]
  Sp                       Sp[]
  Ohc                      Ohc[]
  currentMotorLifterOhcs   Ohc[]         @relation("CurrentMotorLifterRelation")
  currentMotorTransferOhcs Ohc[]         @relation("CurrentMotorTransferRelation")
  tempMotorLifterOhcs      Ohc[]         @relation("TempMotorLifterRelation")
  tempMotorTransferOhcs    Ohc[]         @relation("TempMotorTransferRelation")

  @@map("assets")
}

model Cycle {
  id               Int                @id @default(autoincrement())
  ulid             String             @unique @default(uuid())
  name             String             @unique
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedAt        DateTime           @updatedAt @map("updated_at")
  sp               Sp[]
  ohc              Ohc[]
  cycleDescription CycleDescription[]

  @@map("cycles")
}

model Sp {
  id                Int                 @id @default(autoincrement())
  ulid              String              @unique @default(uuid())
  name              String              @unique
  cycleId           Int                 @map("cycle_id")
  ohcId             Int?                @map("ohc_id")
  assetTagCd        String              @map("asset_tag_cd")
  createdAt         DateTime            @default(now()) @map("created_at")
  updatedAt         DateTime            @updatedAt @map("updated_at")
  cycle             Cycle               @relation(fields: [cycleId], references: [id])
  ohc               Ohc?                @relation(fields: [ohcId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  asset             Asset               @relation(fields: [assetTagCd], references: [tagCd], onDelete: NoAction, onUpdate: NoAction)
  spConditions      SpCondition[]
  spConditionRecord SpConditionRecord[]

  @@map("sp")
}

model SpCondition {
  id            Int      @id @default(autoincrement())
  ulid          String   @unique @default(uuid())
  spId          Int      @map("sp_id")
  assetTagCd    String   @map("asset_tag_cd")
  name          String
  actualValue   Int      @default(0) @map("actual_value")
  standardValue Int      @map("standard_value")
  value         String   @default("0")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  sp            Sp       @relation(fields: [spId], references: [id])
  asset         Asset    @relation(fields: [assetTagCd], references: [tagCd])

  @@map("sp_conditions")
}

model Ohc {
  id                   Int      @id @default(autoincrement())
  ulid                 String   @unique @default(uuid())
  name                 String   @unique
  condition            String   @default("")
  status               String   @default("")
  runningTime          BigInt   @default(0)
  stopTime             BigInt   @default(0)
  cycleTime            BigInt   @default(0)
  taktTime             BigInt   @default(0)
  efficiency           Float    @default(0.0)
  performance          Float    @default(0.0)
  currentMotorLifter   String?
  currentMotorTransfer String?
  tempMotorLifter      String?
  tempMotorTransfer    String?
  okCondition          BigInt   @default(0)
  ngCondition          BigInt   @default(0)
  abnormalityCount     Int      @default(0)
  cycleId              Int      @map("cycle_id")
  assetTagCd           String   @map("asset_tag_cd")
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @updatedAt @map("updated_at")

  cycle                     Cycle                  @relation(fields: [cycleId], references: [id])
  asset                     Asset                  @relation(fields: [assetTagCd], references: [tagCd], onDelete: NoAction, onUpdate: NoAction)
  currentMotorLifterAsset   Asset?                 @relation("CurrentMotorLifterRelation", fields: [currentMotorLifter], references: [tagCd], onDelete: NoAction, onUpdate: NoAction)
  currentMotorTransferAsset Asset?                 @relation("CurrentMotorTransferRelation", fields: [currentMotorTransfer], references: [tagCd], onDelete: NoAction, onUpdate: NoAction)
  tempMotorLifterAsset      Asset?                 @relation("TempMotorLifterRelation", fields: [tempMotorLifter], references: [tagCd], onDelete: NoAction, onUpdate: NoAction)
  tempMotorTransferAsset    Asset?                 @relation("TempMotorTransferRelation", fields: [tempMotorTransfer], references: [tagCd], onDelete: NoAction, onUpdate: NoAction)
  sp                        Sp[]
  ohcConditions             OhcCondition[]
  OHCMonitoringHistory      OHCMonitoringHistory[]
  ohcConditionRecord        OhcConditionRecord[]

  @@map("ohc")
}

model OHCMonitoringHistory {
  id                   Int      @id @default(autoincrement())
  ohcId                Int
  timestamp            DateTime
  currentMotorLifter   Float
  currentMotorTransfer Float
  tempMotorLifter      Float
  tempMotorTransfer    Float
  ohc                  Ohc      @relation(fields: [ohcId], references: [id])

  @@index([ohcId, timestamp])
  @@map("ohc_monitoring_history")
}

model OhcCondition {
  id            Int      @id @default(autoincrement())
  ulid          String   @unique @default(uuid())
  ohcId         Int      @map("ohc_id")
  tagCd         String   @map("tag_cd")
  name          String
  actualValue   Int      @default(0) @map("actual_value")
  standardValue Int      @map("standard_value")
  value         String   @default("0")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  ohc           Ohc      @relation(fields: [ohcId], references: [id])

  @@map("ohc_conditions")
}

model CycleDescription {
  id            Int      @id @default(autoincrement())
  ulid          String   @unique @default(uuid())
  name          String
  actualValue   Int      @default(0) @map("actual_value")
  standardValue Int      @map("standard_value")
  cycleId       Int      @map("cycle_id")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  cycle         Cycle    @relation(fields: [cycleId], references: [id])

  @@map("cycle_descriptions")
}

model WarningRecord {
  id        Int      @id @default(autoincrement())
  ulid      String   @unique @default(uuid())
  date      String
  month     String
  year      String
  type      String
  detail    String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("warning_records")
}

model OhcConditionRecord {
  id          Int      @id @default(autoincrement())
  ulid        String   @unique @default(uuid())
  ohcId       Int      @map("ohc_id")
  date        String
  month       String
  year        String
  tagCd       String
  description String
  counter     Int
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  ohc         Ohc      @relation(fields: [ohcId], references: [id])

  @@map("ohc_condition_records")
}

model SpConditionRecord {
  id          Int      @id @default(autoincrement())
  ulid        String   @unique @default(uuid())
  spId        Int      @map("sp_id")
  date        String
  month       String
  year        String
  tagCd       String
  description String
  counter     Int
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  sp          Sp       @relation(fields: [spId], references: [id])

  @@map("sp_condition_records")
}
